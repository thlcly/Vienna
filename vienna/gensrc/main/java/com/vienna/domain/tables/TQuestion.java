/**
 * This class is generated by jOOQ
 */
package com.vienna.domain.tables;


import com.vienna.domain.Keys;
import com.vienna.domain.Vienna;
import com.vienna.domain.tables.records.TQuestionRecord;
import com.vienna.model.converters.TimestampConverter;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.joda.time.DateTime;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TQuestion extends TableImpl<TQuestionRecord> {

    private static final long serialVersionUID = 822889543;

    /**
     * The reference instance of <code>vienna.t_question</code>
     */
    public static final TQuestion T_QUESTION = new TQuestion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TQuestionRecord> getRecordType() {
        return TQuestionRecord.class;
    }

    /**
     * The column <code>vienna.t_question.ID</code>.  主键
     */
    public final TableField<TQuestionRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, " 主键");

    /**
     * The column <code>vienna.t_question.TYPE_ID</code>. 问题类型
     */
    public final TableField<TQuestionRecord, Integer> TYPE_ID = createField("TYPE_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "问题类型");

    /**
     * The column <code>vienna.t_question.USER_ID</code>. 问题提交人
     */
    public final TableField<TQuestionRecord, Integer> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "问题提交人");

    /**
     * The column <code>vienna.t_question.QUESTION</code>. 问题描述
     */
    public final TableField<TQuestionRecord, String> QUESTION = createField("QUESTION", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "问题描述");

    /**
     * The column <code>vienna.t_question.SOLVED</code>. 解决思路
     */
    public final TableField<TQuestionRecord, String> SOLVED = createField("SOLVED", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "解决思路");

    /**
     * The column <code>vienna.t_question.REFRERENCE</code>. 参考资料
     */
    public final TableField<TQuestionRecord, String> REFRERENCE = createField("REFRERENCE", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "参考资料");

    /**
     * The column <code>vienna.t_question.CREATED</code>. 创建时间
     */
    public final TableField<TQuestionRecord, DateTime> CREATED = createField("CREATED", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间", new TimestampConverter());

    /**
     * The column <code>vienna.t_question.UPDATED</code>. 更新时间
     */
    public final TableField<TQuestionRecord, DateTime> UPDATED = createField("UPDATED", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间", new TimestampConverter());

    /**
     * The column <code>vienna.t_question.STATUS</code>. 状态（1：正常，0：删除）
     */
    public final TableField<TQuestionRecord, Boolean> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "状态（1：正常，0：删除）");

    /**
     * Create a <code>vienna.t_question</code> table reference
     */
    public TQuestion() {
        this("t_question", null);
    }

    /**
     * Create an aliased <code>vienna.t_question</code> table reference
     */
    public TQuestion(String alias) {
        this(alias, T_QUESTION);
    }

    private TQuestion(String alias, Table<TQuestionRecord> aliased) {
        this(alias, aliased, null);
    }

    private TQuestion(String alias, Table<TQuestionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Vienna.VIENNA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TQuestionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_QUESTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TQuestionRecord> getPrimaryKey() {
        return Keys.KEY_T_QUESTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TQuestionRecord>> getKeys() {
        return Arrays.<UniqueKey<TQuestionRecord>>asList(Keys.KEY_T_QUESTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TQuestion as(String alias) {
        return new TQuestion(alias, this);
    }

    /**
     * Rename this table
     */
    public TQuestion rename(String name) {
        return new TQuestion(name, null);
    }
}

/**
 * This class is generated by jOOQ
 */
package com.vienna.domain.tables;


import com.vienna.domain.Keys;
import com.vienna.domain.Vienna;
import com.vienna.domain.tables.records.TUserRecord;
import com.vienna.model.converters.TimestampConverter;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.joda.time.DateTime;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TUser extends TableImpl<TUserRecord> {

    private static final long serialVersionUID = -71349817;

    /**
     * The reference instance of <code>vienna.t_user</code>
     */
    public static final TUser T_USER = new TUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TUserRecord> getRecordType() {
        return TUserRecord.class;
    }

    /**
     * The column <code>vienna.t_user.ID</code>. 主键id
     */
    public final TableField<TUserRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "主键id");

    /**
     * The column <code>vienna.t_user.PASSWORD</code>. 密码
     */
    public final TableField<TUserRecord, String> PASSWORD = createField("PASSWORD", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "密码");

    /**
     * The column <code>vienna.t_user.NAME</code>. 用户名
     */
    public final TableField<TUserRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "用户名");

    /**
     * The column <code>vienna.t_user.PHONE</code>. 手机号码
     */
    public final TableField<TUserRecord, String> PHONE = createField("PHONE", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "手机号码");

    /**
     * The column <code>vienna.t_user.EMAIL</code>. 电子邮箱
     */
    public final TableField<TUserRecord, String> EMAIL = createField("EMAIL", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "电子邮箱");

    /**
     * The column <code>vienna.t_user.CREATED</code>. 创建时间
     */
    public final TableField<TUserRecord, DateTime> CREATED = createField("CREATED", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间", new TimestampConverter());

    /**
     * The column <code>vienna.t_user.UPDATED</code>. 更新时间
     */
    public final TableField<TUserRecord, DateTime> UPDATED = createField("UPDATED", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间", new TimestampConverter());

    /**
     * The column <code>vienna.t_user.STATUS</code>.
     */
    public final TableField<TUserRecord, Boolean> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>vienna.t_user</code> table reference
     */
    public TUser() {
        this("t_user", null);
    }

    /**
     * Create an aliased <code>vienna.t_user</code> table reference
     */
    public TUser(String alias) {
        this(alias, T_USER);
    }

    private TUser(String alias, Table<TUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private TUser(String alias, Table<TUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Vienna.VIENNA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TUserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TUserRecord> getPrimaryKey() {
        return Keys.KEY_T_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TUserRecord>> getKeys() {
        return Arrays.<UniqueKey<TUserRecord>>asList(Keys.KEY_T_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TUser as(String alias) {
        return new TUser(alias, this);
    }

    /**
     * Rename this table
     */
    public TUser rename(String name) {
        return new TUser(name, null);
    }
}
